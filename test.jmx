<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 1">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">12</intProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">5</intProp>
        </elementProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="simple-controller 1"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request1 - Simple">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;  &quot;createdBy&quot;: &quot;ACOE&quot;,  &quot;projectName&quot;: &quot;acoe1&quot;,  &quot;status&quot;: &quot;created&quot;,  &quot;teamSize&quot;:  0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.domain">106.51.90.215</stringProp>
            <stringProp name="HTTPSampler.port">8084</stringProp>
            <stringProp name="HTTPSampler.path">/projects</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor$DslLambdaPreProcessor" testname="Lambda Pre Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript1</stringProp>
              <stringProp name="scriptId">lambdaScript1</stringProp>
            </us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor>
            <hashTree/>
            <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="JSON JMESPath Extractor">
              <stringProp name="JMESExtractor.referenceName">var1</stringProp>
              <stringProp name="JMESExtractor.jmesPathExpr">[0].projectId</stringProp>
              <stringProp name="JMESExtractor.matchNumber">1</stringProp>
              <stringProp name="JMESExtractor.defaultValue">default</stringProp>
            </JMESPathExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">var2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">start</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">end</stringProp>
              <intProp name="BoundaryExtractor.match_number">1</intProp>
              <stringProp name="BoundaryExtractor.default">default</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor$DslLambdaPostProcessor" testname="Lambda Post Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript2</stringProp>
              <stringProp name="scriptId">lambdaScript2</stringProp>
            </us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">Keep-Alive</stringProp>
                </elementProp>
                <elementProp name="auto_redirects" elementType="Header">
                  <stringProp name="Header.name">auto_redirects</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="simple-controller 1"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request 5">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;value&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.domain">106.51.90.215</stringProp>
            <stringProp name="HTTPSampler.port">8084</stringProp>
            <stringProp name="HTTPSampler.path">/projects</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor$DslLambdaPreProcessor" testname="Lambda Pre Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript3</stringProp>
              <stringProp name="scriptId">lambdaScript3</stringProp>
            </us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor>
            <hashTree/>
            <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="JSON JMESPath Extractor">
              <stringProp name="JMESExtractor.referenceName">var1</stringProp>
              <stringProp name="JMESExtractor.jmesPathExpr">[0].projectId</stringProp>
              <stringProp name="JMESExtractor.matchNumber">1</stringProp>
              <stringProp name="JMESExtractor.defaultValue">default</stringProp>
            </JMESPathExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">var2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">start</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">end</stringProp>
              <intProp name="BoundaryExtractor.match_number">1</intProp>
              <stringProp name="BoundaryExtractor.default">default</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor$DslLambdaPostProcessor" testname="Lambda Post Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript4</stringProp>
              <stringProp name="scriptId">lambdaScript4</stringProp>
            </us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">Keep-Alive</stringProp>
                </elementProp>
                <elementProp name="auto_redirects" elementType="Header">
                  <stringProp name="Header.name">auto_redirects</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request 2">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;value&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.domain">106.51.90.215</stringProp>
            <stringProp name="HTTPSampler.port">8084</stringProp>
            <stringProp name="HTTPSampler.path">/projects</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor$DslLambdaPreProcessor" testname="Lambda Pre Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript5</stringProp>
              <stringProp name="scriptId">lambdaScript5</stringProp>
            </us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor>
            <hashTree/>
            <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="JSON JMESPath Extractor">
              <stringProp name="JMESExtractor.referenceName">var1</stringProp>
              <stringProp name="JMESExtractor.jmesPathExpr">[0].projectId</stringProp>
              <stringProp name="JMESExtractor.matchNumber">1</stringProp>
              <stringProp name="JMESExtractor.defaultValue">default</stringProp>
            </JMESPathExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">var2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">start</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">end</stringProp>
              <intProp name="BoundaryExtractor.match_number">1</intProp>
              <stringProp name="BoundaryExtractor.default">default</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor$DslLambdaPostProcessor" testname="Lambda Post Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript6</stringProp>
              <stringProp name="scriptId">lambdaScript6</stringProp>
            </us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">Keep-Alive</stringProp>
                </elementProp>
                <elementProp name="auto_redirects" elementType="Header">
                  <stringProp name="Header.name">auto_redirects</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller">
          <boolProp name="IfController.useExpression">true</boolProp>
          <stringProp name="IfController.condition">true</stringProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request 3">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;value&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.domain">106.51.90.215</stringProp>
            <stringProp name="HTTPSampler.port">8084</stringProp>
            <stringProp name="HTTPSampler.path">/projects</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor$DslLambdaPreProcessor" testname="Lambda Pre Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript7</stringProp>
              <stringProp name="scriptId">lambdaScript7</stringProp>
            </us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor>
            <hashTree/>
            <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="JSON JMESPath Extractor">
              <stringProp name="JMESExtractor.referenceName">var2</stringProp>
              <stringProp name="JMESExtractor.jmesPathExpr">[0].projectId</stringProp>
              <stringProp name="JMESExtractor.matchNumber">1</stringProp>
              <stringProp name="JMESExtractor.defaultValue">default</stringProp>
            </JMESPathExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">var2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">start</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">end</stringProp>
              <intProp name="BoundaryExtractor.match_number">1</intProp>
              <stringProp name="BoundaryExtractor.default">default</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor$DslLambdaPostProcessor" testname="Lambda Post Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript8</stringProp>
              <stringProp name="scriptId">lambdaScript8</stringProp>
            </us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">Keep-Alive</stringProp>
                </elementProp>
                <elementProp name="auto_redirects" elementType="Header">
                  <stringProp name="Header.name">auto_redirects</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple-controller-2"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request 4">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;value&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.domain">106.51.90.215</stringProp>
            <stringProp name="HTTPSampler.port">8084</stringProp>
            <stringProp name="HTTPSampler.path">/projects</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor$DslLambdaPreProcessor" testname="Lambda Pre Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript9</stringProp>
              <stringProp name="scriptId">lambdaScript9</stringProp>
            </us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor>
            <hashTree/>
            <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="JSON JMESPath Extractor">
              <stringProp name="JMESExtractor.referenceName">var1</stringProp>
              <stringProp name="JMESExtractor.jmesPathExpr">[0].projectId</stringProp>
              <stringProp name="JMESExtractor.matchNumber">1</stringProp>
              <stringProp name="JMESExtractor.defaultValue">default</stringProp>
            </JMESPathExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">var2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">start</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">end</stringProp>
              <intProp name="BoundaryExtractor.match_number">1</intProp>
              <stringProp name="BoundaryExtractor.default">default</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor$DslLambdaPostProcessor" testname="Lambda Post Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript10</stringProp>
              <stringProp name="scriptId">lambdaScript10</stringProp>
            </us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">Keep-Alive</stringProp>
                </elementProp>
                <elementProp name="auto_redirects" elementType="Header">
                  <stringProp name="Header.name">auto_redirects</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group 2">
        <intProp name="ThreadGroup.num_threads">5</intProp>
        <intProp name="ThreadGroup.ramp_time">2</intProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">3</intProp>
        </elementProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple-controller-Test 2"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request Temp 2">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{      &quot;projectName&quot;: &quot;Project_Temp${var1}&quot;,
        &quot;createdBy&quot;: &quot;deepak&quot;,
        &quot;createdOn&quot;: &quot;25/05/2024&quot;,
        &quot;status&quot;: &quot;Created&quot;
    }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.domain">106.51.90.215</stringProp>
            <stringProp name="HTTPSampler.port">8084</stringProp>
            <stringProp name="HTTPSampler.path">/addProject</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor$DslLambdaPreProcessor" testname="Lambda Pre Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript11</stringProp>
              <stringProp name="scriptId">lambdaScript11</stringProp>
            </us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor>
            <hashTree/>
            <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="JSON JMESPath Extractor">
              <stringProp name="JMESExtractor.referenceName">var2</stringProp>
              <stringProp name="JMESExtractor.jmesPathExpr">[0].projectId</stringProp>
              <stringProp name="JMESExtractor.matchNumber">1</stringProp>
              <stringProp name="JMESExtractor.defaultValue">default</stringProp>
            </JMESPathExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">var2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">start</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">end</stringProp>
              <intProp name="BoundaryExtractor.match_number">1</intProp>
              <stringProp name="BoundaryExtractor.default">default</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor$DslLambdaPostProcessor" testname="Lambda Post Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript12</stringProp>
              <stringProp name="scriptId">lambdaScript12</stringProp>
            </us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">Keep-Alive</stringProp>
                </elementProp>
                <elementProp name="auto_redirects" elementType="Header">
                  <stringProp name="Header.name">auto_redirects</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Percent Selector Controller">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <stringProp name="ThroughputController.percentThroughput">30.0</stringProp>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request for Throughput Testing">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;value&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.domain">106.51.90.215</stringProp>
            <stringProp name="HTTPSampler.port">8084</stringProp>
            <stringProp name="HTTPSampler.path">/projects</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          </HTTPSamplerProxy>
          <hashTree>
            <us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor$DslLambdaPreProcessor" testname="Lambda Pre Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript13</stringProp>
              <stringProp name="scriptId">lambdaScript13</stringProp>
            </us.abstracta.jmeter.javadsl.core.preprocessors.DslJsr223PreProcessor_-DslLambdaPreProcessor>
            <hashTree/>
            <JMESPathExtractor guiclass="JMESPathExtractorGui" testclass="JMESPathExtractor" testname="JSON JMESPath Extractor">
              <stringProp name="JMESExtractor.referenceName">var1</stringProp>
              <stringProp name="JMESExtractor.jmesPathExpr">[0].projectId</stringProp>
              <stringProp name="JMESExtractor.matchNumber">1</stringProp>
              <stringProp name="JMESExtractor.defaultValue">default</stringProp>
            </JMESPathExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">var2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">start</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">end</stringProp>
              <intProp name="BoundaryExtractor.match_number">1</intProp>
              <stringProp name="BoundaryExtractor.default">default</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor guiclass="TestBeanGUI" testclass="us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor$DslLambdaPostProcessor" testname="Lambda Post Processor">
              <stringProp name="TestPlan.comments">Check https://abstracta.github.io/jmeter-java-dsl/guide/#lambdas for instructions on how to run this element in remote engines (like BlazeMeter) or in JMeter standalone GUI.</stringProp>
              <stringProp name="SCRIPT_ID">lambdaScript14</stringProp>
              <stringProp name="scriptId">lambdaScript14</stringProp>
            </us.abstracta.jmeter.javadsl.core.postprocessors.DslJsr223PostProcessor_-DslLambdaPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">Keep-Alive</stringProp>
                </elementProp>
                <elementProp name="auto_redirects" elementType="Header">
                  <stringProp name="Header.name">auto_redirects</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="filename">projects.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <org.apache.jmeter.testelement.property.NullProperty>
          <name>variableNames</name>
        </org.apache.jmeter.testelement.property.NullProperty>
      </CSVDataSet>
      <hashTree/>
      <us.abstracta.jmeter.javadsl.core.listeners.HtmlReporter_-AutoFlushingResultCollector guiclass="SimpleDataWriter" testclass="us.abstracta.jmeter.javadsl.core.listeners.HtmlReporter$AutoFlushingResultCollector" testname="Simple Data Writer">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Users\Jitu\Desktop\Performance_Test\2024-09-17 09-30-38 46be790b-354e-4294-aa9e-9f115864571e\report.jtl</stringProp>
      </us.abstracta.jmeter.javadsl.core.listeners.HtmlReporter_-AutoFlushingResultCollector>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
      </CacheManager>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
